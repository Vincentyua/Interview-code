'''
尽管是一个CS专业的学生，小B的数学基础很好并对数值计算有着特别的兴趣，喜欢用计算机程序来解决数学问题，现在，她正在玩一个数值变换的游戏。她发现计算机中经常用不同的进制表示一个数，如十进制数123表达为16进制时只包含两位数7、11（B），用八进制表示为三位数1、7、3，按不同进制表达时，各个位数的和也不同，如上述例子中十六进制和八进制中各位数的和分别是18和11,。 小B感兴趣的是，一个数A如果按2到A-1进制表达时，各个位数之和的均值是多少？她希望你能帮她解决这个问题？ 所有的计算均基于十进制进行，结果也用十进制表示为不可约简的分数形式。
思路：其实主要完成两个操作，一个是计算给定数的所有进制的和，第二个求出整个和和进制个数的最大公约数，因为最后求的是不可约的一个分式，最大公约数用辗转相除法递归的求出，计算进制的和就用while来做
'''
def gcd(x,y):
    if x > y :
        mb = x
        ms = y
    else:
        mb = y
        ms = x
    if mb % ms == 0:
        return ms
    else:
        return gcd(ms,mb%ms)
def mean(n):
    sum = 0
    for i in range(2,n):
        m = n 
        while  m > 0:
            sum = sum + m % i
            m = m // i
    return str(sum/gcd(sum,n-2))+'/'+str((n-2)/gcd(sum,n-2))

if __name__=="__main__":
    n = int(input())
    print(mean(n))
